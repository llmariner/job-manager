// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: api/v1/job_manager_service.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InternalJob_State int32

const (
	InternalJob_STATE_UNSPECIFIED InternalJob_State = 0
	InternalJob_QUEUED            InternalJob_State = 1
	InternalJob_RUNNING           InternalJob_State = 2
	InternalJob_FAILED            InternalJob_State = 3
	InternalJob_SUCCEEDED         InternalJob_State = 4
	InternalJob_CANCELED          InternalJob_State = 5
)

// Enum value maps for InternalJob_State.
var (
	InternalJob_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "QUEUED",
		2: "RUNNING",
		3: "FAILED",
		4: "SUCCEEDED",
		5: "CANCELED",
	}
	InternalJob_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"QUEUED":            1,
		"RUNNING":           2,
		"FAILED":            3,
		"SUCCEEDED":         4,
		"CANCELED":          5,
	}
)

func (x InternalJob_State) Enum() *InternalJob_State {
	p := new(InternalJob_State)
	*p = x
	return p
}

func (x InternalJob_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InternalJob_State) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_job_manager_service_proto_enumTypes[0].Descriptor()
}

func (InternalJob_State) Type() protoreflect.EnumType {
	return &file_api_v1_job_manager_service_proto_enumTypes[0]
}

func (x InternalJob_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InternalJob_State.Descriptor instead.
func (InternalJob_State) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{7, 0}
}

type InternalJob_Action int32

const (
	InternalJob_ACTION_UNSPECIFIED InternalJob_Action = 0
	InternalJob_CREATING           InternalJob_Action = 1
	InternalJob_CANCELING          InternalJob_Action = 2
)

// Enum value maps for InternalJob_Action.
var (
	InternalJob_Action_name = map[int32]string{
		0: "ACTION_UNSPECIFIED",
		1: "CREATING",
		2: "CANCELING",
	}
	InternalJob_Action_value = map[string]int32{
		"ACTION_UNSPECIFIED": 0,
		"CREATING":           1,
		"CANCELING":          2,
	}
)

func (x InternalJob_Action) Enum() *InternalJob_Action {
	p := new(InternalJob_Action)
	*p = x
	return p
}

func (x InternalJob_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InternalJob_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_job_manager_service_proto_enumTypes[1].Descriptor()
}

func (InternalJob_Action) Type() protoreflect.EnumType {
	return &file_api_v1_job_manager_service_proto_enumTypes[1]
}

func (x InternalJob_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InternalJob_Action.Descriptor instead.
func (InternalJob_Action) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{7, 1}
}

type UpdateJobPhaseRequest_Phase int32

const (
	UpdateJobPhaseRequest_PHASE_UNSPECIFIED UpdateJobPhaseRequest_Phase = 0
	UpdateJobPhaseRequest_PREPROCESSED      UpdateJobPhaseRequest_Phase = 1
	UpdateJobPhaseRequest_JOB_CREATED       UpdateJobPhaseRequest_Phase = 2
	UpdateJobPhaseRequest_FINETUNED         UpdateJobPhaseRequest_Phase = 3
	UpdateJobPhaseRequest_FAILED            UpdateJobPhaseRequest_Phase = 4
	UpdateJobPhaseRequest_RECREATE          UpdateJobPhaseRequest_Phase = 5
	UpdateJobPhaseRequest_CANCELED          UpdateJobPhaseRequest_Phase = 6
)

// Enum value maps for UpdateJobPhaseRequest_Phase.
var (
	UpdateJobPhaseRequest_Phase_name = map[int32]string{
		0: "PHASE_UNSPECIFIED",
		1: "PREPROCESSED",
		2: "JOB_CREATED",
		3: "FINETUNED",
		4: "FAILED",
		5: "RECREATE",
		6: "CANCELED",
	}
	UpdateJobPhaseRequest_Phase_value = map[string]int32{
		"PHASE_UNSPECIFIED": 0,
		"PREPROCESSED":      1,
		"JOB_CREATED":       2,
		"FINETUNED":         3,
		"FAILED":            4,
		"RECREATE":          5,
		"CANCELED":          6,
	}
)

func (x UpdateJobPhaseRequest_Phase) Enum() *UpdateJobPhaseRequest_Phase {
	p := new(UpdateJobPhaseRequest_Phase)
	*p = x
	return p
}

func (x UpdateJobPhaseRequest_Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateJobPhaseRequest_Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_job_manager_service_proto_enumTypes[2].Descriptor()
}

func (UpdateJobPhaseRequest_Phase) Type() protoreflect.EnumType {
	return &file_api_v1_job_manager_service_proto_enumTypes[2]
}

func (x UpdateJobPhaseRequest_Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateJobPhaseRequest_Phase.Descriptor instead.
func (UpdateJobPhaseRequest_Phase) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{11, 0}
}

type Integration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string             `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Wandb *Integration_Wandb `protobuf:"bytes,2,opt,name=wandb,proto3" json:"wandb,omitempty"`
}

func (x *Integration) Reset() {
	*x = Integration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_job_manager_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integration) ProtoMessage() {}

func (x *Integration) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_job_manager_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integration.ProtoReflect.Descriptor instead.
func (*Integration) Descriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{0}
}

func (x *Integration) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Integration) GetWandb() *Integration_Wandb {
	if x != nil {
		return x.Wandb
	}
	return nil
}

type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt int64      `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Error     *Job_Error `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	// The name of the fine-tuned model that is being created. The value will be null if the fine-tuning job is still running.
	FineTunedModel  string               `protobuf:"bytes,4,opt,name=fine_tuned_model,json=fineTunedModel,proto3" json:"fine_tuned_model,omitempty"`
	FinishedAt      int64                `protobuf:"varint,5,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	Hyperparameters *Job_Hyperparameters `protobuf:"bytes,6,opt,name=hyperparameters,proto3" json:"hyperparameters,omitempty"`
	// The base model that is being fine-tuned.
	Model          string   `protobuf:"bytes,7,opt,name=model,proto3" json:"model,omitempty"`
	Object         string   `protobuf:"bytes,8,opt,name=object,proto3" json:"object,omitempty"`
	OrganizationId string   `protobuf:"bytes,9,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	ResultFiles    []string `protobuf:"bytes,10,rep,name=result_files,json=resultFiles,proto3" json:"result_files,omitempty"`
	// The current status of the fine-tuning job, which can be either validating_files, queued, running, succeeded, failed, or cancelled.
	Status              string         `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	TrainedTokens       int32          `protobuf:"varint,12,opt,name=trained_tokens,json=trainedTokens,proto3" json:"trained_tokens,omitempty"`
	TrainingFile        string         `protobuf:"bytes,13,opt,name=training_file,json=trainingFile,proto3" json:"training_file,omitempty"`
	ValidationFile      string         `protobuf:"bytes,14,opt,name=validation_file,json=validationFile,proto3" json:"validation_file,omitempty"`
	Integrations        []*Integration `protobuf:"bytes,15,rep,name=integrations,proto3" json:"integrations,omitempty"`
	Seed                int32          `protobuf:"varint,16,opt,name=seed,proto3" json:"seed,omitempty"`
	ProjectId           string         `protobuf:"bytes,17,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	KubernetesNamespace string         `protobuf:"bytes,18,opt,name=kubernetes_namespace,json=kubernetesNamespace,proto3" json:"kubernetes_namespace,omitempty"`
	// cluster_id is the ID of the cluster where he job runs.
	ClusterId         string `protobuf:"bytes,19,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	OrganizationTitle string `protobuf:"bytes,20,opt,name=organization_title,json=organizationTitle,proto3" json:"organization_title,omitempty"`
	ProjectTitle      string `protobuf:"bytes,21,opt,name=project_title,json=projectTitle,proto3" json:"project_title,omitempty"`
	ClusterName       string `protobuf:"bytes,22,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_job_manager_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_job_manager_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{1}
}

func (x *Job) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Job) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Job) GetError() *Job_Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Job) GetFineTunedModel() string {
	if x != nil {
		return x.FineTunedModel
	}
	return ""
}

func (x *Job) GetFinishedAt() int64 {
	if x != nil {
		return x.FinishedAt
	}
	return 0
}

func (x *Job) GetHyperparameters() *Job_Hyperparameters {
	if x != nil {
		return x.Hyperparameters
	}
	return nil
}

func (x *Job) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Job) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *Job) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *Job) GetResultFiles() []string {
	if x != nil {
		return x.ResultFiles
	}
	return nil
}

func (x *Job) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Job) GetTrainedTokens() int32 {
	if x != nil {
		return x.TrainedTokens
	}
	return 0
}

func (x *Job) GetTrainingFile() string {
	if x != nil {
		return x.TrainingFile
	}
	return ""
}

func (x *Job) GetValidationFile() string {
	if x != nil {
		return x.ValidationFile
	}
	return ""
}

func (x *Job) GetIntegrations() []*Integration {
	if x != nil {
		return x.Integrations
	}
	return nil
}

func (x *Job) GetSeed() int32 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *Job) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Job) GetKubernetesNamespace() string {
	if x != nil {
		return x.KubernetesNamespace
	}
	return ""
}

func (x *Job) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *Job) GetOrganizationTitle() string {
	if x != nil {
		return x.OrganizationTitle
	}
	return ""
}

func (x *Job) GetProjectTitle() string {
	if x != nil {
		return x.ProjectTitle
	}
	return ""
}

func (x *Job) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type CreateJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model           string                            `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	TrainingFile    string                            `protobuf:"bytes,2,opt,name=training_file,json=trainingFile,proto3" json:"training_file,omitempty"`
	Hyperparameters *CreateJobRequest_Hyperparameters `protobuf:"bytes,3,opt,name=hyperparameters,proto3" json:"hyperparameters,omitempty"`
	// A string of up to 18 characters that will be added to your fine-tuned model name.
	//
	// For example, a suffix of "custom-model-name" would produce a
	// model name like
	// ft:gpt-3.5-turbo:openai:custom-model-name:7p4lURel.
	Suffix         string         `protobuf:"bytes,4,opt,name=suffix,proto3" json:"suffix,omitempty"`
	ValidationFile string         `protobuf:"bytes,5,opt,name=validation_file,json=validationFile,proto3" json:"validation_file,omitempty"`
	Integrations   []*Integration `protobuf:"bytes,6,rep,name=integrations,proto3" json:"integrations,omitempty"`
	Seed           int32          `protobuf:"varint,7,opt,name=seed,proto3" json:"seed,omitempty"`
}

func (x *CreateJobRequest) Reset() {
	*x = CreateJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_job_manager_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobRequest) ProtoMessage() {}

func (x *CreateJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_job_manager_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobRequest.ProtoReflect.Descriptor instead.
func (*CreateJobRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateJobRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CreateJobRequest) GetTrainingFile() string {
	if x != nil {
		return x.TrainingFile
	}
	return ""
}

func (x *CreateJobRequest) GetHyperparameters() *CreateJobRequest_Hyperparameters {
	if x != nil {
		return x.Hyperparameters
	}
	return nil
}

func (x *CreateJobRequest) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *CreateJobRequest) GetValidationFile() string {
	if x != nil {
		return x.ValidationFile
	}
	return ""
}

func (x *CreateJobRequest) GetIntegrations() []*Integration {
	if x != nil {
		return x.Integrations
	}
	return nil
}

func (x *CreateJobRequest) GetSeed() int32 {
	if x != nil {
		return x.Seed
	}
	return 0
}

type ListJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// after is the identifier for the last job from the previous pagination request.
	After string `protobuf:"bytes,1,opt,name=after,proto3" json:"after,omitempty"`
	// limit is the number of fine-tuning jobs to retrieve. Defaults to 20.
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListJobsRequest) Reset() {
	*x = ListJobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_job_manager_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsRequest) ProtoMessage() {}

func (x *ListJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_job_manager_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsRequest.ProtoReflect.Descriptor instead.
func (*ListJobsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListJobsRequest) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

func (x *ListJobsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListJobsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Object  string `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	Data    []*Job `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	HasMore bool   `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *ListJobsResponse) Reset() {
	*x = ListJobsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_job_manager_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsResponse) ProtoMessage() {}

func (x *ListJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_job_manager_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsResponse.ProtoReflect.Descriptor instead.
func (*ListJobsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListJobsResponse) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *ListJobsResponse) GetData() []*Job {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListJobsResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type GetJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetJobRequest) Reset() {
	*x = GetJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_job_manager_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobRequest) ProtoMessage() {}

func (x *GetJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_job_manager_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobRequest.ProtoReflect.Descriptor instead.
func (*GetJobRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CancelJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CancelJobRequest) Reset() {
	*x = CancelJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_job_manager_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobRequest) ProtoMessage() {}

func (x *CancelJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_job_manager_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobRequest.ProtoReflect.Descriptor instead.
func (*CancelJobRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{6}
}

func (x *CancelJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type InternalJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job           *Job   `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	OutputModelId string `protobuf:"bytes,2,opt,name=output_model_id,json=outputModelId,proto3" json:"output_model_id,omitempty"`
	Suffix        string `protobuf:"bytes,3,opt,name=suffix,proto3" json:"suffix,omitempty"`
	// state is also stored in the job object, but this value takes precedence.
	State        InternalJob_State  `protobuf:"varint,4,opt,name=state,proto3,enum=llmariner.fine_tuning.server.v1.InternalJob_State" json:"state,omitempty"`
	QueuedAction InternalJob_Action `protobuf:"varint,5,opt,name=queued_action,json=queuedAction,proto3,enum=llmariner.fine_tuning.server.v1.InternalJob_Action" json:"queued_action,omitempty"`
}

func (x *InternalJob) Reset() {
	*x = InternalJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_job_manager_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalJob) ProtoMessage() {}

func (x *InternalJob) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_job_manager_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalJob.ProtoReflect.Descriptor instead.
func (*InternalJob) Descriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{7}
}

func (x *InternalJob) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *InternalJob) GetOutputModelId() string {
	if x != nil {
		return x.OutputModelId
	}
	return ""
}

func (x *InternalJob) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *InternalJob) GetState() InternalJob_State {
	if x != nil {
		return x.State
	}
	return InternalJob_STATE_UNSPECIFIED
}

func (x *InternalJob) GetQueuedAction() InternalJob_Action {
	if x != nil {
		return x.QueuedAction
	}
	return InternalJob_ACTION_UNSPECIFIED
}

type ListQueuedInternalJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListQueuedInternalJobsRequest) Reset() {
	*x = ListQueuedInternalJobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_job_manager_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQueuedInternalJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueuedInternalJobsRequest) ProtoMessage() {}

func (x *ListQueuedInternalJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_job_manager_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueuedInternalJobsRequest.ProtoReflect.Descriptor instead.
func (*ListQueuedInternalJobsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{8}
}

type ListQueuedInternalJobsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*InternalJob `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *ListQueuedInternalJobsResponse) Reset() {
	*x = ListQueuedInternalJobsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_job_manager_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQueuedInternalJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueuedInternalJobsResponse) ProtoMessage() {}

func (x *ListQueuedInternalJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_job_manager_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueuedInternalJobsResponse.ProtoReflect.Descriptor instead.
func (*ListQueuedInternalJobsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListQueuedInternalJobsResponse) GetJobs() []*InternalJob {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type GetInternalJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetInternalJobRequest) Reset() {
	*x = GetInternalJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_job_manager_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInternalJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInternalJobRequest) ProtoMessage() {}

func (x *GetInternalJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_job_manager_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInternalJobRequest.ProtoReflect.Descriptor instead.
func (*GetInternalJobRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetInternalJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateJobPhaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Phase UpdateJobPhaseRequest_Phase `protobuf:"varint,2,opt,name=phase,proto3,enum=llmariner.fine_tuning.server.v1.UpdateJobPhaseRequest_Phase" json:"phase,omitempty"`
	// message describing the details of the job phase. currently only used for failed jobs.
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// model_id is optional.
	ModelId string `protobuf:"bytes,4,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
}

func (x *UpdateJobPhaseRequest) Reset() {
	*x = UpdateJobPhaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_job_manager_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJobPhaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobPhaseRequest) ProtoMessage() {}

func (x *UpdateJobPhaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_job_manager_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobPhaseRequest.ProtoReflect.Descriptor instead.
func (*UpdateJobPhaseRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateJobPhaseRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateJobPhaseRequest) GetPhase() UpdateJobPhaseRequest_Phase {
	if x != nil {
		return x.Phase
	}
	return UpdateJobPhaseRequest_PHASE_UNSPECIFIED
}

func (x *UpdateJobPhaseRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateJobPhaseRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

type UpdateJobPhaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateJobPhaseResponse) Reset() {
	*x = UpdateJobPhaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_job_manager_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJobPhaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobPhaseResponse) ProtoMessage() {}

func (x *UpdateJobPhaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_job_manager_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobPhaseResponse.ProtoReflect.Descriptor instead.
func (*UpdateJobPhaseResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{12}
}

type Integration_Wandb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project string   `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Name    string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Entity  string   `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity,omitempty"`
	Tags    []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *Integration_Wandb) Reset() {
	*x = Integration_Wandb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_job_manager_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integration_Wandb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integration_Wandb) ProtoMessage() {}

func (x *Integration_Wandb) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_job_manager_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integration_Wandb.ProtoReflect.Descriptor instead.
func (*Integration_Wandb) Descriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Integration_Wandb) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *Integration_Wandb) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Integration_Wandb) GetEntity() string {
	if x != nil {
		return x.Entity
	}
	return ""
}

func (x *Integration_Wandb) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Job_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Param   string `protobuf:"bytes,3,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *Job_Error) Reset() {
	*x = Job_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_job_manager_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job_Error) ProtoMessage() {}

func (x *Job_Error) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_job_manager_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job_Error.ProtoReflect.Descriptor instead.
func (*Job_Error) Descriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Job_Error) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Job_Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Job_Error) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

type Job_Hyperparameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Note: OpenAI API supports string or interger.
	BatchSize int32 `protobuf:"varint,1,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	// Note: OpenAI API supports string or number.
	LearningRateMultiplier float64 `protobuf:"fixed64,2,opt,name=learning_rate_multiplier,json=learningRateMultiplier,proto3" json:"learning_rate_multiplier,omitempty"`
	// Note: OpenAI API supports string or interger.
	NEpochs int32 `protobuf:"varint,3,opt,name=n_epochs,json=nEpochs,proto3" json:"n_epochs,omitempty"`
}

func (x *Job_Hyperparameters) Reset() {
	*x = Job_Hyperparameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_job_manager_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job_Hyperparameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job_Hyperparameters) ProtoMessage() {}

func (x *Job_Hyperparameters) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_job_manager_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job_Hyperparameters.ProtoReflect.Descriptor instead.
func (*Job_Hyperparameters) Descriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Job_Hyperparameters) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *Job_Hyperparameters) GetLearningRateMultiplier() float64 {
	if x != nil {
		return x.LearningRateMultiplier
	}
	return 0
}

func (x *Job_Hyperparameters) GetNEpochs() int32 {
	if x != nil {
		return x.NEpochs
	}
	return 0
}

type CreateJobRequest_Hyperparameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Note: OpenAI API supports string or interger.
	BatchSize int32 `protobuf:"varint,1,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	// Note: OpenAI API supports string or number.
	LearningRateMultiplier float64 `protobuf:"fixed64,2,opt,name=learning_rate_multiplier,json=learningRateMultiplier,proto3" json:"learning_rate_multiplier,omitempty"`
	// Note: OpenAI API supports string or interger.
	NEpochs int32 `protobuf:"varint,3,opt,name=n_epochs,json=nEpochs,proto3" json:"n_epochs,omitempty"`
}

func (x *CreateJobRequest_Hyperparameters) Reset() {
	*x = CreateJobRequest_Hyperparameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_job_manager_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobRequest_Hyperparameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobRequest_Hyperparameters) ProtoMessage() {}

func (x *CreateJobRequest_Hyperparameters) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_job_manager_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobRequest_Hyperparameters.ProtoReflect.Descriptor instead.
func (*CreateJobRequest_Hyperparameters) Descriptor() ([]byte, []int) {
	return file_api_v1_job_manager_service_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CreateJobRequest_Hyperparameters) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *CreateJobRequest_Hyperparameters) GetLearningRateMultiplier() float64 {
	if x != nil {
		return x.LearningRateMultiplier
	}
	return 0
}

func (x *CreateJobRequest_Hyperparameters) GetNEpochs() int32 {
	if x != nil {
		return x.NEpochs
	}
	return 0
}

var File_api_v1_job_manager_service_proto protoreflect.FileDescriptor

var file_api_v1_job_manager_service_proto_rawDesc = []byte{
	0x0a, 0x20, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1f, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69,
	0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xce, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x77, 0x61, 0x6e, 0x64, 0x62, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72,
	0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x57, 0x61, 0x6e, 0x64, 0x62, 0x52, 0x05, 0x77, 0x61, 0x6e, 0x64, 0x62, 0x1a,
	0x61, 0x0a, 0x05, 0x57, 0x61, 0x6e, 0x64, 0x62, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x22, 0xcb, 0x08, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72,
	0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x66,
	0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x65, 0x54, 0x75, 0x6e, 0x65, 0x64,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x5e, 0x0a, 0x0f, 0x68, 0x79, 0x70, 0x65, 0x72, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65,
	0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0f, 0x68, 0x79, 0x70, 0x65, 0x72, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x50, 0x0a,
	0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e,
	0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x65, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x4b, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x85, 0x01, 0x0a, 0x0f, 0x48, 0x79, 0x70,
	0x65, 0x72, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x73,
	0x22, 0xe9, 0x03, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x6b, 0x0a, 0x0f, 0x68, 0x79, 0x70, 0x65, 0x72, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x6c, 0x6c, 0x6d, 0x61,
	0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x79, 0x70,
	0x65, 0x72, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0f, 0x68, 0x79,
	0x70, 0x65, 0x72, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x50,
	0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72,
	0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x65, 0x65, 0x64, 0x1a, 0x85, 0x01, 0x0a, 0x0f, 0x48, 0x79, 0x70, 0x65, 0x72, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x73, 0x22, 0x3d, 0x0a, 0x0f,
	0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x7f, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65,
	0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x1f, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a,
	0x10, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xca, 0x03, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4a, 0x6f,
	0x62, 0x12, 0x36, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f,
	0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x48, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72,
	0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x6c, 0x6c, 0x6d,
	0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x60, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e,
	0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10,
	0x04, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x22,
	0x3d, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x22, 0x1f,
	0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x62, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65,
	0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x04, 0x6a,
	0x6f, 0x62, 0x73, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xaa, 0x02, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x52, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65,
	0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f,
	0x62, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x22,
	0x78, 0x0a, 0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x48, 0x41, 0x53,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x50, 0x52, 0x45, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4a, 0x4f, 0x42, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x49, 0x4e, 0x45, 0x54, 0x55, 0x4e, 0x45, 0x44, 0x10,
	0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0c, 0x0a,
	0x08, 0x52, 0x45, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0xc0, 0x04, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x65, 0x54, 0x75, 0x6e, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x31, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69,
	0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6c, 0x6c, 0x6d,
	0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62,
	0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31,
	0x2f, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x6a, 0x6f, 0x62,
	0x73, 0x12, 0x8d, 0x01, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x30,
	0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f,
	0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e,
	0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31,
	0x2f, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x6a, 0x6f, 0x62,
	0x73, 0x12, 0x81, 0x01, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x12, 0x2e, 0x2e, 0x6c,
	0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6c,
	0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4a,
	0x6f, 0x62, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f,
	0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x6a, 0x6f, 0x62, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8e, 0x01, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4a, 0x6f, 0x62, 0x12, 0x31, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e,
	0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e,
	0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x22, 0x28, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x22, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74,
	0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x6a, 0x6f, 0x62, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x32, 0xb1, 0x03, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x65, 0x54,
	0x75, 0x6e, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x3e, 0x2e,
	0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74,
	0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e,
	0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74,
	0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4a, 0x6f, 0x62,
	0x12, 0x36, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e,
	0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72,
	0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x4a, 0x6f, 0x62, 0x12, 0x81, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4a, 0x6f, 0x62, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x36, 0x2e, 0x6c, 0x6c, 0x6d, 0x61,
	0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4a, 0x6f, 0x62, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x37, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69,
	0x6e, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e,
	0x65, 0x72, 0x2f, 0x6a, 0x6f, 0x62, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_job_manager_service_proto_rawDescOnce sync.Once
	file_api_v1_job_manager_service_proto_rawDescData = file_api_v1_job_manager_service_proto_rawDesc
)

func file_api_v1_job_manager_service_proto_rawDescGZIP() []byte {
	file_api_v1_job_manager_service_proto_rawDescOnce.Do(func() {
		file_api_v1_job_manager_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_job_manager_service_proto_rawDescData)
	})
	return file_api_v1_job_manager_service_proto_rawDescData
}

var file_api_v1_job_manager_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_v1_job_manager_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_api_v1_job_manager_service_proto_goTypes = []interface{}{
	(InternalJob_State)(0),                   // 0: llmariner.fine_tuning.server.v1.InternalJob.State
	(InternalJob_Action)(0),                  // 1: llmariner.fine_tuning.server.v1.InternalJob.Action
	(UpdateJobPhaseRequest_Phase)(0),         // 2: llmariner.fine_tuning.server.v1.UpdateJobPhaseRequest.Phase
	(*Integration)(nil),                      // 3: llmariner.fine_tuning.server.v1.Integration
	(*Job)(nil),                              // 4: llmariner.fine_tuning.server.v1.Job
	(*CreateJobRequest)(nil),                 // 5: llmariner.fine_tuning.server.v1.CreateJobRequest
	(*ListJobsRequest)(nil),                  // 6: llmariner.fine_tuning.server.v1.ListJobsRequest
	(*ListJobsResponse)(nil),                 // 7: llmariner.fine_tuning.server.v1.ListJobsResponse
	(*GetJobRequest)(nil),                    // 8: llmariner.fine_tuning.server.v1.GetJobRequest
	(*CancelJobRequest)(nil),                 // 9: llmariner.fine_tuning.server.v1.CancelJobRequest
	(*InternalJob)(nil),                      // 10: llmariner.fine_tuning.server.v1.InternalJob
	(*ListQueuedInternalJobsRequest)(nil),    // 11: llmariner.fine_tuning.server.v1.ListQueuedInternalJobsRequest
	(*ListQueuedInternalJobsResponse)(nil),   // 12: llmariner.fine_tuning.server.v1.ListQueuedInternalJobsResponse
	(*GetInternalJobRequest)(nil),            // 13: llmariner.fine_tuning.server.v1.GetInternalJobRequest
	(*UpdateJobPhaseRequest)(nil),            // 14: llmariner.fine_tuning.server.v1.UpdateJobPhaseRequest
	(*UpdateJobPhaseResponse)(nil),           // 15: llmariner.fine_tuning.server.v1.UpdateJobPhaseResponse
	(*Integration_Wandb)(nil),                // 16: llmariner.fine_tuning.server.v1.Integration.Wandb
	(*Job_Error)(nil),                        // 17: llmariner.fine_tuning.server.v1.Job.Error
	(*Job_Hyperparameters)(nil),              // 18: llmariner.fine_tuning.server.v1.Job.Hyperparameters
	(*CreateJobRequest_Hyperparameters)(nil), // 19: llmariner.fine_tuning.server.v1.CreateJobRequest.Hyperparameters
}
var file_api_v1_job_manager_service_proto_depIdxs = []int32{
	16, // 0: llmariner.fine_tuning.server.v1.Integration.wandb:type_name -> llmariner.fine_tuning.server.v1.Integration.Wandb
	17, // 1: llmariner.fine_tuning.server.v1.Job.error:type_name -> llmariner.fine_tuning.server.v1.Job.Error
	18, // 2: llmariner.fine_tuning.server.v1.Job.hyperparameters:type_name -> llmariner.fine_tuning.server.v1.Job.Hyperparameters
	3,  // 3: llmariner.fine_tuning.server.v1.Job.integrations:type_name -> llmariner.fine_tuning.server.v1.Integration
	19, // 4: llmariner.fine_tuning.server.v1.CreateJobRequest.hyperparameters:type_name -> llmariner.fine_tuning.server.v1.CreateJobRequest.Hyperparameters
	3,  // 5: llmariner.fine_tuning.server.v1.CreateJobRequest.integrations:type_name -> llmariner.fine_tuning.server.v1.Integration
	4,  // 6: llmariner.fine_tuning.server.v1.ListJobsResponse.data:type_name -> llmariner.fine_tuning.server.v1.Job
	4,  // 7: llmariner.fine_tuning.server.v1.InternalJob.job:type_name -> llmariner.fine_tuning.server.v1.Job
	0,  // 8: llmariner.fine_tuning.server.v1.InternalJob.state:type_name -> llmariner.fine_tuning.server.v1.InternalJob.State
	1,  // 9: llmariner.fine_tuning.server.v1.InternalJob.queued_action:type_name -> llmariner.fine_tuning.server.v1.InternalJob.Action
	10, // 10: llmariner.fine_tuning.server.v1.ListQueuedInternalJobsResponse.jobs:type_name -> llmariner.fine_tuning.server.v1.InternalJob
	2,  // 11: llmariner.fine_tuning.server.v1.UpdateJobPhaseRequest.phase:type_name -> llmariner.fine_tuning.server.v1.UpdateJobPhaseRequest.Phase
	5,  // 12: llmariner.fine_tuning.server.v1.FineTuningService.CreateJob:input_type -> llmariner.fine_tuning.server.v1.CreateJobRequest
	6,  // 13: llmariner.fine_tuning.server.v1.FineTuningService.ListJobs:input_type -> llmariner.fine_tuning.server.v1.ListJobsRequest
	8,  // 14: llmariner.fine_tuning.server.v1.FineTuningService.GetJob:input_type -> llmariner.fine_tuning.server.v1.GetJobRequest
	9,  // 15: llmariner.fine_tuning.server.v1.FineTuningService.CancelJob:input_type -> llmariner.fine_tuning.server.v1.CancelJobRequest
	11, // 16: llmariner.fine_tuning.server.v1.FineTuningWorkerService.ListQueuedInternalJobs:input_type -> llmariner.fine_tuning.server.v1.ListQueuedInternalJobsRequest
	13, // 17: llmariner.fine_tuning.server.v1.FineTuningWorkerService.GetInternalJob:input_type -> llmariner.fine_tuning.server.v1.GetInternalJobRequest
	14, // 18: llmariner.fine_tuning.server.v1.FineTuningWorkerService.UpdateJobPhase:input_type -> llmariner.fine_tuning.server.v1.UpdateJobPhaseRequest
	4,  // 19: llmariner.fine_tuning.server.v1.FineTuningService.CreateJob:output_type -> llmariner.fine_tuning.server.v1.Job
	7,  // 20: llmariner.fine_tuning.server.v1.FineTuningService.ListJobs:output_type -> llmariner.fine_tuning.server.v1.ListJobsResponse
	4,  // 21: llmariner.fine_tuning.server.v1.FineTuningService.GetJob:output_type -> llmariner.fine_tuning.server.v1.Job
	4,  // 22: llmariner.fine_tuning.server.v1.FineTuningService.CancelJob:output_type -> llmariner.fine_tuning.server.v1.Job
	12, // 23: llmariner.fine_tuning.server.v1.FineTuningWorkerService.ListQueuedInternalJobs:output_type -> llmariner.fine_tuning.server.v1.ListQueuedInternalJobsResponse
	10, // 24: llmariner.fine_tuning.server.v1.FineTuningWorkerService.GetInternalJob:output_type -> llmariner.fine_tuning.server.v1.InternalJob
	15, // 25: llmariner.fine_tuning.server.v1.FineTuningWorkerService.UpdateJobPhase:output_type -> llmariner.fine_tuning.server.v1.UpdateJobPhaseResponse
	19, // [19:26] is the sub-list for method output_type
	12, // [12:19] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_v1_job_manager_service_proto_init() }
func file_api_v1_job_manager_service_proto_init() {
	if File_api_v1_job_manager_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_job_manager_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Integration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_job_manager_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_job_manager_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_job_manager_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_job_manager_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJobsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_job_manager_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_job_manager_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_job_manager_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_job_manager_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQueuedInternalJobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_job_manager_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQueuedInternalJobsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_job_manager_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInternalJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_job_manager_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateJobPhaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_job_manager_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateJobPhaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_job_manager_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Integration_Wandb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_job_manager_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_job_manager_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job_Hyperparameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_job_manager_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobRequest_Hyperparameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_job_manager_service_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_api_v1_job_manager_service_proto_goTypes,
		DependencyIndexes: file_api_v1_job_manager_service_proto_depIdxs,
		EnumInfos:         file_api_v1_job_manager_service_proto_enumTypes,
		MessageInfos:      file_api_v1_job_manager_service_proto_msgTypes,
	}.Build()
	File_api_v1_job_manager_service_proto = out.File
	file_api_v1_job_manager_service_proto_rawDesc = nil
	file_api_v1_job_manager_service_proto_goTypes = nil
	file_api_v1_job_manager_service_proto_depIdxs = nil
}
