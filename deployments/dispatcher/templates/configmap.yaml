apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "job-manager-dispatcher.fullname" . }}
  labels:
    {{- include "job-manager-dispatcher.labels" . | nindent 4 }}
data:
  config.yaml: |
    pollingInterval: {{ .Values.pollingInterval }}
    componentStatusSender:
      enable: {{ .Values.componentStatusSender.enable }}
      name: {{ .Values.componentStatusSender.name }}
      initialDelay: {{ .Values.componentStatusSender.initialDelay }}
      interval: {{ .Values.componentStatusSender.interval }}
      clusterManagerServerWorkerServiceAddr: {{ .Values.global.worker.controlPlaneAddr | default .Values.componentStatusSender.clusterManagerServerWorkerServiceAddr }}
    job:
      image: {{ .Values.job.image }}
      version: {{ .Values.job.version }}
      imagePullPolicy: {{ .Values.job.imagePullPolicy }}
      wandbApiKeySecret:
        name: {{ .Values.job.wandbApiKeySecret.name }}
        key: {{ .Values.job.wandbApiKeySecret.key }}
      useBitsAndBytesQuantization: {{ .Values.job.useBitsAndBytesQuantization }}
    notebook:
      llmarinerBaseUrl: {{ .Values.notebook.llmarinerBaseUrl }}
      enablePvc: {{ .Values.notebook.enablePvc }}
      storageClassName: {{ .Values.notebook.storageClassName }}
      storageSize: {{ .Values.notebook.storageSize }}
      mountPath: {{ .Values.notebook.mountPath }}
    jobManagerServerWorkerServiceAddr: {{ .Values.global.worker.controlPlaneAddr | default .Values.jobManagerServerWorkerServiceAddr }}
    fileManagerServerWorkerServiceAddr: {{ .Values.global.worker.controlPlaneAddr | default .Values.fileManagerServerWorkerServiceAddr }}
    modelManagerServerWorkerServiceAddr: {{ .Values.global.worker.controlPlaneAddr | default .Values.modelManagerServerWorkerServiceAddr }}
    worker:
      tls:
        enable: {{ .Values.global.worker.tls.enable }}
    objectStore:
      s3:
        endpointUrl: {{ .Values.global.objectStore.s3.endpointUrl }}
        region: {{ .Values.global.objectStore.s3.region }}
        bucket: {{ .Values.global.objectStore.s3.bucket }}
        {{- with .Values.global.objectStore.s3.assumeRole }}
        {{- if .roleArn }}
        assumeRole:
          roleArn: {{ .roleArn }}
          externalId: {{ .externalId }}
        {{- end }}
        {{- end }}
    clusterStatusUpdateInterval: {{ .Values.clusterStatusUpdateInterval }}
    kubernetesManager:
      enableLeaderElection: {{ .Values.kubernetesManager.enableLeaderElection }}
      leaderElectionID: {{ include "job-manager-dispatcher.fullname" . }}
      metricsBindAddress: {{ .Values.kubernetesManager.metricsBindAddress }}
      healthBindAddress: {{ .Values.kubernetesManager.healthBindAddress }}
      pprofBindAddress: {{ .Values.kubernetesManager.pprofBindAddress }}
    kueueIntegration:
      enable: {{ .Values.kueueIntegration.enable }}
      defaultQueueName: {{ .Values.kueueIntegration.defaultQueueName }}
    debug:
      kubeconfigPath: {{ .Values.debug.kubeconfigPath }}
